using FixEverything.ViewModels;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Input;

namespace FixEverything.Commands
{
    class MalwareRemovalCommand : ICommand
    {
        public MalwareRemovalCommand(MalwareRemovalViewModel viewModel)
        {
            this.viewModel = viewModel;
        }

        private MalwareRemovalViewModel viewModel;

        public event System.EventHandler CanExecuteChanged
        {
            add
            {
                CommandManager.RequerySuggested += value;
            }
            remove
            {
                CommandManager.RequerySuggested -= value;
            }
        }

        public bool CanExecute(object parameter)
        {
            return viewModel.CanExecute;
        }

        public void Execute(object parameter)
        {
            if (Utils.isProxyEnabled()) Utils.disableProxy();

            switch (parameter.ToString())
            {
                case "btnHitman64":
                    viewModel.HitmanPro64();
                    break;
                case "btnHitman32":
                    viewModel.HitmanPro32();
                    break;
                case "btnMalwarebytes":
                    viewModel.Malwarebytes();
                    break;
                case "btnMalwarebytesOld":
                    viewModel.Malwarebytes_Old();
                    break;
                case "btnSuper":
                    viewModel.Super();
                    break;
                case "btnAdwcleaner":
                    viewModel.AdwCleaner();
                    break;
                case "btnIobit":
                    viewModel.Iobit();
                    break;
                case "btnRevo":
                    viewModel.Revo();
                    break;
                case "btnUvk":
                    viewModel.Uvk();
                    break;
                case "btnCcleaner":
                    viewModel.Ccleaner();
                    break;
                default:
                    break;
            }
        }
    }
}
